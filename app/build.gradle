plugins {
    id 'kotlin-android'
    id 'kotlin-android-extensions'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    namespace 'com.example.mastodonclient'
    compileSdk 33

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = 1.8
    }

    dataBinding {
        enabled true
    }

    defaultConfig {
        applicationId "com.example.mastodonclient"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        // プロパティファイルinstance.propertiesが無ければ新規作成
        def instanceProperties = project.rootProject.file('instance.properties')
        if (!instanceProperties.exists()) {
            instanceProperties.createNewFile()
        }

        // プロパテxファイルの読み込み
        def prop = new Properties()
        prop.load(project.rootProject.file('instance.properties').newDataInputStream())
        // 個々のプロパティを読み込む。存在しなければから文字として扱う
        def INSTANCE_URL = prop.getProperty("instance_url") ?: ""
        def USERNAME = prop.getProperty("username") ?: ""
        def ACCESS_TOKEN = prop.getProperty("access_token") ?: ""

        // それぞれの値を、BuildConfigに定数として加える
        buildConfigField("String", "INSTANCE_URL", "\"${INSTANCE_URL}\"")
        buildConfigField("String", "USERNAME", "\"${USERNAME}\"")
        buildConfigField("String", "ACCESS_TOKEN", "\"${ACCESS_TOKEN}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        dataBinding true
        buildConfig = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.fragment:fragment-ktx:1.5.7'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3"
    implementation "com.squareup.moshi:moshi-kotlin:1.9.2"
    implementation 'com.squareup.retrofit2:converter-moshi:2.7.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    kapt 'com.github.bumptech.glide:compiler:4.10.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}